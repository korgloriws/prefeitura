
preciso de um código em python pro seguinte problema :

existe um arquivo da qual preciso faze algumas adequações chamado matriz , como é de melhor manipulação este arquivo esta em CSV separado por ;


neste arquivo vamos olhar pra 4 colunas :
"CONTA","Valor","Tipo_valor","Natureza_valor"

1-> na coluna "CONTA" existem numeros de contas neste formato : "111110100000000" em muitas delas se repete a ideia seria agrupar as iguais com base em critérios que vamos discutir que depende das outras colunas.

2-> na coluna  "Valor" é do ponto de vista financeiro mesmo são numeros a serem calculados.

3-> na coluna "Tipo_valor" existem 3 tipos principais :"beginning_balance","
period_change" e "ending_balance" que traduzem as movimentações de uma conta em periodos , sendo o saldo inicial , as movimentações de periodo e o saldo final.

4-> na coluna "Natureza_valor" so vai haver duas opções "C" ou "D" que significa créito e débito.


como se trata de diversos fatores para agrupar e somar os valores para tornar as contas repetidas uma só o programa em questão precisa olhar pra essas quatro colunas ao mesmo tempo com essas ressalvas de apresentações passadas.

efetivamente o que precisamos fazer? vamos olhar pra coluna "CONTA" ver todas que são iguais se for olhar pra coluna "Tipo_valor" se for igual olhar pra coluna 
"Natureza_valor" vao haver as duas opções "C" e "D" esses precessos são com o intuito de de agrupamentos para as contas matematicas que faremos. 

uma vez agrupado com base nas instruções vamos olhar para a coluna valor de cada conta já levando em consideração os agrupamentos e fazer as seguintes contas :

no caso do "beginning_balance" e do "ending_balance"
vamos subtrair o valor do grupo ("D"-"C") os valores mais uma retirados da coluna "Valor"

no caso do "period_change" vamos somas tudo que for do grupo "D" (lembrando que é somar "D"+"D") e depois somar tudo que for "C" (lembrando que é somar "C+"C")

e no final vamos gerar um arquivo em xlsx com os resultados :

conta saldo inicial movimentação credito , movimentação debito e saldo final .

não é uma tarefa dificil , porem são muitas camadas de processo e só vai funcionar olhando pra todas as colunas sempre pra agrupar , filtrar e realizar as operações necessarias 

---------------------------------------------


preciso de uma adição no relatório 

vamos olhar pras colunas "CONTA", "Valor" e "Natureza_valor"

se "CONTA" iniciar com 1 e "Valor" <> de 0 então "Natureza_valor" tem que ser "D" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"


se "CONTA" iniciar com 2 e "Valor" <> de 0 então "Natureza_valor" tem que ser "C" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"

se "CONTA" iniciar com 3 e "Valor" <> de 0 então "Natureza_valor" tem que ser "D" se não for escrever "posição inválida" em uma outra coluna com o nome "OBS"


se "CONTA" iniciar com 3 e "Valor" <> de 0 então "Natureza_valor" tem que ser "C" se não for escrever "posição inválida" em uma outra coluna com o nome "OBS"


se "CONTA" iniciar com 5 e "Valor" <> de 0 então "Natureza_valor" tem que ser "D" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"


se "CONTA" iniciar com 6 e "Valor" <> de 0 então "Natureza_valor" tem que ser "C" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"



se "CONTA" iniciar com 7 e "Valor" <> de 0 então "Natureza_valor" tem que ser "D" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"


se "CONTA" iniciar com 8 e "Valor" <> de 0 então "Natureza_valor" tem que ser "C" se não for escrever "saldo invertido" em uma outra coluna com o nome "OBS"

===========================================================================================================================================================================

preciso fazer um comparador em python  para  2 arquivos  1 CSV que usa separador por ; e o outro xlsx 

o primeiro arquivo é a matriz :

na matriz existem 6 colunas que precisamos olhar:
 "CONTA", "Saldo Inicial", "Movimentação Crédito",	 "Movimentação Débito","Saldo Final"e "Natureza Final"


o segundo arquivo é o balancete :

no balancete vamos olhar pra 7 colunas :

"cod_contabil","debito_anterior","credito_anterior", 	 "debito_mes","credito_mes","debito_atual",	 "credito_atual"

 uma coisa importante a se levar em consideração é que são tabelas de contabilidade publica , então trabalharemos com valores financeiros.

a ideia é comparar os dois , cabe a observação de que os dois arquivos tem quantidades de colunas relevantes diferente um do outro , o que significa que a nossa dinamica de comparação vai ser um pouco diferente vamos fazer uma especie de dicionario.

do arquivo da matriz vamos olhar primeiro para a coluna "CONTA" que sera comparada com a  "cod_contabil" do balancete se houver algum faltante em um dos arquivos me alertar que esta faltando e em qual arquivo.

depois disso vamos partir pros valores é importante definir que cada conta ou cod contabil esta ligada aos valores em questão o que siginifica que as colunas de ambos os arquivos tem que ser lido com uma certa correlação 

no arquivo matriz temos as colunas de valor "Saldo Inicial", "Movimentação Crédito ","Movimentação Débito","Saldo Final" que serão comparadas com as de valor do balancete "debito_anterior","credito_anterior", "debito_mes","credito_mes","debito_atual",	 "credito_atual"

como essas de valor no balancete esta dividio por credito e debito , tanto inicial quanto final usaremos a coluna "Natureza Final" da matriz para definir se é debito ou credito tambem ai ficara:

na matriz "Saldo Inicial" + "D" da coluna "Natureza Final" = no balancete "debito_anterior"

na matriz "Saldo Inicial" + "C" da coluna "Natureza Final" = no balancete "credito_anterior"

na matriz "Movimentação Crédito" = no balancete "credito_mes"

na matriz "Movimentação Débito" = no balancete ""debito_mes""

na matriz "Saldo final" + "D" da coluna "Natureza Final" = no balancete " debito_atual"

na matriz "Saldo final" + "C" da coluna "Natureza Final" = no balancete " credito_atual"


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 a logica que precisa ser  alterada :


"def comparar_valores(conta):
    row_matriz = matriz_df[matriz_df['CONTA'] == conta].iloc[0]
    
    if valores_vazios_ou_zero(row_matriz):
        return []

    row_balancete = balancete_df[balancete_df['cod_contabil'] == conta].iloc[0]

    natureza_final = row_matriz['Natureza Final']

    # Comparação dos valores conforme as regras
    if natureza_final == 'D':
        saldo_inicial = converter_valor_monetario(row_matriz['Saldo Inicial'])
        debito_anterior = converter_valor_monetario(row_balancete['debito_anterior'])
        if saldo_inicial != debito_anterior:
            adicionar_discrepancia(discrepancias, conta, 'Saldo Inicial/Débito Anterior', saldo_inicial, debito_anterior)

        saldo_final = converter_valor_monetario(row_matriz['Saldo Final'])
        debito_atual = converter_valor_monetario(row_balancete['debito_atual'])
        if saldo_final != debito_atual:
            adicionar_discrepancia(discrepancias, conta, 'Saldo Final/Débito Atual', saldo_final, debito_atual)
    
    elif natureza_final == 'C':
        saldo_inicial = converter_valor_monetario(row_matriz['Saldo Inicial'])
        credito_anterior = converter_valor_monetario(row_balancete['credito_anterior'])
        if saldo_inicial != credito_anterior:
            adicionar_discrepancia(discrepancias, conta, 'Saldo Inicial/Crédito Anterior', saldo_inicial, credito_anterior)

        saldo_final = converter_valor_monetario(row_matriz['Saldo Final'])
        credito_atual = converter_valor_monetario(row_balancete['credito_atual'])
        if saldo_final != credito_atual:
            adicionar_discrepancia(discrepancias, conta, 'Saldo Final/Crédito Atual', saldo_final, credito_atual)

    mov_credito = converter_valor_monetario(row_matriz['Movimentação Crédito'])
    credito_mes = converter_valor_monetario(row_balancete['credito_mes'])
    if mov_credito != credito_mes:
        adicionar_discrepancia(discrepancias, conta, 'Movimentação Crédito/Crédito Mês', mov_credito, credito_mes)

    mov_debito = converter_valor_monetario(row_matriz['Movimentação Débito'])
    debito_mes = converter_valor_monetario(row_balancete['debito_mes'])
    if mov_debito != debito_mes:
        adicionar_discrepancia(discrepancias, conta, 'Movimentação Débito/Débito Mês', mov_debito, debito_mes)


for conta in contas_matriz & contas_balancete:
    comparar_valores(conta)
"



logica nova:

se começados em 1,3,5,7 tem que ser "D" na "Natureza Final" da matriz.

vamos olhar para as colunas" debito_anterior", "debito_mes", "credito_mes"  e " debito_atual" do balancete , que serão respectivamentente  "Saldo Inicial","Movimentação Crédito", "Movimentação Débito" e "Saldo Final" na matriz  

 se não tiver alertar erro.

se começados em 2,4,6,8 tem que ser "C" na "Natureza Final" da matriz.

vamos olhar para as colunas" credito_anterior", "debito_mes", "credito_mes"  e " credito_atual" do balancete , que serão respectivamentente  "Saldo Inicial","Movimentação Crédito", "Movimentação Débito" e "Saldo Final" na matriz  

 se não tiver alertar erro.


lembrando que o que estiver zerado nas colunas " Saldo Inicial","Movimentação Crédito","Movimentação Débito","Saldo Final" nem considerar na comparação 


-----------------------------------------------------------------------------------------------------------------------------------------------------------


nesta parte onde mostra as colunas do balancete :

"colunas_balancete = ['debito_anterior',  'debito_mes ', ' credito_mes ', 'debito_atual']"

deve funcionar para contas que comecem com "1,3,5,7 " por que os valores estarão nas colunas que se relacionam com a posição debito 

e vamos usar a sequencia :

"colunas_balancete = [' credito_anterior', ' debito_mes ', ' credito_mes ', ' credito_atual l']"

para as contas que comecem com "2,4,6,8" 

em todos com as seguintes excessões :


   excecoes_ = [
        "112910101000000", "112910102000000", "112910104000000", "113919900000000",
        "121119905000000", "121219903000000", "123810199000000", "521120200000000",
        "521120300000000", "521120400000000", "522130300000000", "522130900000000"
    ]
    excecoes_ = [
        "227210105000000", "227210202000000", "227210203000000", "227210204000000",
        "2272210303000000", "227210304000000", "227210305000000", "227210402000000",
        "227210403000000", "227210404000000", "621310100000000", "621320000000000",
        "62133000000000", "621340000000000", "621360000000000", "621390000000000"
    ]
nestas excessões será o inverso as que comecem com "1,3,5,7 " vai usar esta sequencia "colunas_balancete = [' credito_anterior', ' debito_mes ', ' credito_mes ', ' credito_atual l']"

e as que começam com  "2,4,6,8" vai usar esta :
"colunas_balancete = ['debito_anterior',  'debito_mes ', ' credito_mes ', 'debito_atual']"


lembrando que isso é apenas uma adição para as colunas do balancete , não pode mudar nada na forma como esta lendo a matriz e nem a comparação como um todo , é a adição de uma condição apenas.
